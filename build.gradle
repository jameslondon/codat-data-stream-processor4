plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.2'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.jil.codat.experiment'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

	implementation 'org.apache.kafka:kafka-streams'
	implementation 'org.springframework.kafka:spring-kafka'

	implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.1'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.14.1'
	implementation 'com.google.code.gson:gson:2.10.1'
	implementation 'com.bazaarvoice.jolt:jolt-core:0.1.8'
	implementation 'org.apache.kafka:kafka-clients:3.5.1'
	implementation 'org.springframework.boot:spring-boot-starter-aop:3.1.3'
	implementation 'redis.clients:jedis:4.3.2'
	implementation 'com.jayway.jsonpath:json-path:2.8.0'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'


	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.mockito:mockito-core:3.12.4'
}

tasks.named('test') {
	useJUnitPlatform()
}
tasks.named('compileJava') {
	inputs.files(tasks.named('processResources'))
}
